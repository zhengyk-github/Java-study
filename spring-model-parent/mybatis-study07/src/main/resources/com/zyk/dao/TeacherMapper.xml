<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyk.dao.TeacherMapper">

    <select id="getTeacher" resultType="Teacher">
         select * from teacher
    </select>

    <!--按结果嵌套查询-->
    <select id="getTeacherById" resultMap="TeacherStudent">
         select s.id sid,s.name sname,t.name tname,t.id tid from student s,teacher t where s.tid = t.id and t.id = #{tid}
    </select>
    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"></result>
        <result property="name" column="tname"></result>
        <!--复杂的属性，我们需要单独处理 对象：association 集合：collection
            javaType="" 指定属性的类型!
            集合中的泛型信息，我们使用ofType获取
         -->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"></result>
            <result property="name" column="sname"></result>
            <result property="tid" column="tid"></result>
        </collection>
    </resultMap>
    <!--================================================================================================================-->
    <!--按照查询嵌套处理-->
    <select id="getTeacherById2" resultMap="TeacherStudent2">
        select * from teacher where id = #{tid}
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>
        <collection property="students" column="id" ofType="Student" javaType="ArrayList" select="getStudentByTid">
        </collection>
    </resultMap>
    <select id="getStudentByTid" resultType="Student">
        select * from student where tid = #{tid}
    </select>


</mapper>